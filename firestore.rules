
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() { return isSignedIn() && request.auth.token.admin == true; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    match /users/{uid} {
      allow read: if isOwner(uid) || isAdmin();
      allow create: if isOwner(uid) && !exists(/databases/$(database)/documents/users/$(uid));
      allow update: if isOwner(uid);
      allow write: if isAdmin();
    }
    match /withdrawals/{wid} {
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow create: if isOwner(request.resource.data.uid);
      allow update, delete: if isAdmin();
    }
    match /orders/{oid} {
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow create: if isOwner(request.resource.data.uid);
      allow update, delete: if isAdmin();
    }
    match /referrals/{rid} {
      allow read: if isOwner(resource.data.referrerUid) || isAdmin();
      allow create: if isSignedIn();
      allow update, delete: if isAdmin();
    }
    match /users/{uid}/activities/{aid} {
      allow read: if isOwner(uid) || isAdmin();
      allow create: if isOwner(uid) || isAdmin();
    }
    match /users/{uid}/bonuses/{bid} {
      allow read: if isOwner(uid) || isAdmin();
      allow create: if isAdmin();
    }
    match /users/{uid}/notifications/{nid} {
      allow read: if isOwner(uid);
      allow update: if isOwner(uid);
      allow create, delete: if isAdmin();
    }
    match /banners/{bid} { allow read: if true; allow write: if isAdmin(); }
    match /appSettings/{docId} { allow read: if true; allow write: if isAdmin(); }
    match /supportTickets/{tid} {
      allow create: if isOwner(request.resource.data.uid);
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow update, delete: if isAdmin();
    }
  }
}
